[
  {
    "objectID": "fitting-exercise/fitting-exercise.html",
    "href": "fitting-exercise/fitting-exercise.html",
    "title": "fitting-exercise.qmd",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidymodels)\n\nWarning: package 'tidymodels' was built under R version 4.4.2\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.3.0     ✔ tune         1.2.1\n✔ infer        1.0.7     ✔ workflows    1.1.4\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.2.1     ✔ yardstick    1.3.1\n✔ recipes      1.1.0     \n\n\nWarning: package 'broom' was built under R version 4.4.2\n\n\nWarning: package 'dials' was built under R version 4.4.2\n\n\nWarning: package 'infer' was built under R version 4.4.2\n\n\nWarning: package 'modeldata' was built under R version 4.4.2\n\n\nWarning: package 'parsnip' was built under R version 4.4.2\n\n\nWarning: package 'recipes' was built under R version 4.4.2\n\n\nWarning: package 'rsample' was built under R version 4.4.2\n\n\nWarning: package 'tune' was built under R version 4.4.2\n\n\nWarning: package 'workflows' was built under R version 4.4.2\n\n\nWarning: package 'workflowsets' was built under R version 4.4.2\n\n\nWarning: package 'yardstick' was built under R version 4.4.2\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n\nlibrary(readr)\nlibrary(here)\n\nhere() starts at C:/Users/murph/Documents/Github/MurtazaYaqubi-MADA-portfolio\n\nlibrary(GGally)\n\nWarning: package 'GGally' was built under R version 4.4.2\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\nlibrary(corrplot)\n\nWarning: package 'corrplot' was built under R version 4.4.2\n\n\ncorrplot 0.95 loaded\n\nlibrary(pROC)\n\nWarning: package 'pROC' was built under R version 4.4.3\n\n\nType 'citation(\"pROC\")' for a citation.\n\nAttaching package: 'pROC'\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\nlibrary(tidymodels)"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#setup",
    "href": "fitting-exercise/fitting-exercise.html#setup",
    "title": "fitting-exercise.qmd",
    "section": "Setup",
    "text": "Setup\n\nlibrary(dplyr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#model-predictions",
    "href": "fitting-exercise/fitting-exercise.html#model-predictions",
    "title": "fitting-exercise.qmd",
    "section": "Model Predictions",
    "text": "Model Predictions\n\n# combine observed data and predicted data from all three models\n# use preds_model1, preds_model2, and preds_null\n\n# update column names in pred dfs\ncolnames(preds_model1) = c(\"Y_mod1\", \"Y_obs\")\ncolnames(preds_model2) = c(\"Y_mod2\", \"Y_obs\")\ncolnames(preds_null) = c(\"Y_obs\",\"DOSE\",\"AGE\",\"SEX\",\"WT\",\"HT\",\"Y_null\")\n\n# combine obs values and pred values\ndat &lt;- preds_null %&gt;%\n  full_join(preds_model1, by=\"Y_obs\") %&gt;%\n  full_join(preds_model2, by=\"Y_obs\") %&gt;%\n  select(\n    \"Y_obs\",\n    \"Y_null\",\n    \"Y_mod1\",\n    \"Y_mod2\"\n  )\n\n\n# pivot data for plotting\ndat1 &lt;- dat %&gt;%\n  tidyr::pivot_longer(cols = c(Y_null, Y_mod1, Y_mod2),\n                      names_to = \"model\", values_to = \"pred\")\n\n# add model type labels\ndat1$model &lt;- factor(dat1$model, \n                     levels = c(\"Y_mod1\", \"Y_mod2\", \"Y_null\"), \n                     labels = c(\"Univariable Model\", \"Multivariable Model\", \"Null Model\"))\n\n# plot observed vs predicted values\nggplot(dat1, aes(x=Y_obs, y=pred, color=model)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  scale_x_continuous(limits=c(0,5000)) +\n  scale_y_continuous(limits=c(0,5000)) \n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n# plot residuals vs predicted for multivariable model\ndat$resid_mod2 &lt;- dat$Y_mod2 - dat$Y_obs\n\nggplot(dat, aes(x=Y_mod2, y=resid_mod2)) +\n  geom_point() +\n  geom_abline(slope=0, intercept = 0) +\n  scale_y_continuous(limits=c(-2500,2500))"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#model-predictions-and-uncertainty",
    "href": "fitting-exercise/fitting-exercise.html#model-predictions-and-uncertainty",
    "title": "fitting-exercise.qmd",
    "section": "Model predictions and uncertainty",
    "text": "Model predictions and uncertainty\n\n# set seed\nset.seed(rngseed)\n\n# bootstrap 100 times\nbootstrap &lt;- rsample::bootstraps(train_data, times=100)\n\n# fit model 2 to each sample and make predictions\npred &lt;- purrr::map(bootstrap$splits, function(split) {\n  # extract sample\n  dat_boot &lt;- rsample::analysis(split)\n  # fit model\n  model &lt;- lm(Y ~ DOSE + AGE + SEX + WT + HT, data=dat_boot)\n  # make predictions\n  predict(model, newdata=train_data)\n})\n\n# convert predictions to df\ndat_pred &lt;- as.data.frame(do.call(rbind, pred))\n\n# calculate median and 89% CI\npreds &lt;- as.data.frame(\n  dat_pred %&gt;% apply(2, quantile, c(0.055, 0.5, 0.945)) |&gt; t() \n)\ncolnames(preds) &lt;- list(\"lo\", \"median\", \"high\")\n\ndat_plot &lt;- cbind(dat, preds)\n\n\n# plot predictions and bootstrap medians and CIs\nggplot(dat_plot) +\n  geom_point(aes(x = Y_obs, y = median, color = \"Bootstrap Median\"), \n             size=2) +\n  geom_errorbar(aes(x = Y_obs, y = median, ymin = lo, ymax = high,\n                color=\"Bootstrap Median\")) +\n  geom_point(aes(x = Y_obs, y = Y_mod2, color = \"Original Model\"), \n             size=2) +\n  geom_abline(slope = 1, intercept = 0) +\n  scale_x_continuous(limits=c(0,5700)) +\n  scale_y_continuous(limits=c(0,5700)) + \n  scale_color_manual(values = c(\n    \"Bootstrap Median\" = \"slateblue\", \n    \"Original Model\" = \"gray30\"\n    )) +\n  labs(\n    x = \"Observed Values\",\n    y = \"Predicted Values\"\n  )\n\n\n\n\n\n\n\n\nThe fitted results from the bootstrapped samples are very similar to those of model 2. Most, if not all, of the 89% confidence intervals computed from the bootstrapped samples contain the fitted estimate of model 2. The data points follow the x = y line very closely, which means that our predicted values are similar to our observed values; i.e., model 2 is performing well."
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#end-of-part-2",
    "href": "fitting-exercise/fitting-exercise.html#end-of-part-2",
    "title": "fitting-exercise.qmd",
    "section": "End of part 2",
    "text": "End of part 2"
  }
]